version: '3.8'
services:
  mysql:
    image: mysql:8.0
    container_name: sky-mysql
    environment:
      MYSQL_ROOT_PASSWORD: hhy760107
      MYSQL_DATABASE: sky_take_out
      MYSQL_USER: sky
      MYSQL_PASSWORD: hhy760107
      TZ: Asia/Shanghai
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
      - ./mysql/conf/my.cnf:/etc/mysql/conf.d/my.cnf
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - my_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: sky-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf --appendonly yes
    networks:
      - my_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  rabbitmq:
    image: rabbitmq:3-management
    container_name: sky-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - my_network
    restart: unless-stopped

  elasticsearch:
    build:
      context: ./elasticsearch
      dockerfile: Dockerfile
    image: sky-elasticsearch-ik:latest
    container_name: sky-elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - my_network
    restart: unless-stopped

  # 苍穹外卖应用
  sky-takeout-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: sky-takeout:latest
    container_name: sky-takeout-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_OPTS=-Xms512m -Xmx1024m
    volumes:
      - ./logs:/app/logs
    networks:
      - my_network
    depends_on:
      - mysql
      - redis
      - rabbitmq
      - elasticsearch
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Jenkins CI/CD服务 - 最新LTS版本
  jenkins:
    image: jenkins/jenkins:lts-jdk17
    container_name: sky-jenkins
    user: root
    ports:
      - "8090:8080"
      - "50000:50000"
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/workspace
    environment:
      - JENKINS_OPTS=--httpPort=8080
    networks:
      - my_network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:
  es_data:
  jenkins_data:

networks:
  my_network:
    driver: bridge